from r2b2.audit import Audit as Audit, PairwiseAudit as PairwiseAudit
from r2b2.contest import Contest as Contest, ContestType as ContestType
from typing import Any

default_contest: Any

class SimpleAudit(Audit):
    def __init__(
        self,
        alpha: float,
        beta: float,
        max_fraction_to_draw: int,
        replacement: bool,
        contest: Contest,
    ) -> None: ...
    def get_min_sample_size(self, sub_audit: PairwiseAudit) -> Any: ...
    def next_sample_size(self): ...
    def stopping_condition_pairwise(self, pair: str, verbose: bool) -> bool: ...
    def next_min_winner_ballots_pairwise(self, sub_audit: PairwiseAudit) -> Any: ...
    def compute_risk(self, sub_audit: PairwiseAudit) -> Any: ...
    def compute_min_winner_ballots(self, sub_audit: PairwiseAudit) -> Any: ...
    def compute_all_min_winner_ballots(self, sub_audit: PairwiseAudit) -> Any: ...
    def get_risk_level(self) -> None: ...

def test_simple_audit() -> None: ...
def test_simple_audit_execution() -> None: ...
def test_simple_audit_execute_rounds() -> None: ...
def test_repr() -> None: ...
def test_str() -> None: ...
def test_pairwise_str() -> None: ...
def test_pairwise_repr() -> None: ...
def test_initialization_errors() -> None: ...
def test_exceptions() -> None: ...
def test_asn() -> None: ...
def test_get_interval() -> None: ...
def test_current_dist_null() -> None: ...
def test_current_dist_reported() -> None: ...
