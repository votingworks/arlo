version: 2.1
orbs:
  python: circleci/python@2.0.3
  node: circleci/node@5.0.2
  browser-tools: circleci/browser-tools@1.4.0

executors:
  arlo:
    docker:
      - image: cimg/python:3.8.13-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: cimg/postgres:12.11
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test

commands:
  create-data-model:
    steps:
      - run:
          name: create data model
          command: |
            make resetdb
      # Generate the en_US.UTF-8 locale (which for some reason isn't set up in
      # the Docker container we use). arlo uses this locale to parse numbers in CSVs.
      - run:
          name: generate locale en_US.UTF-8
          command: |
            sudo sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
            sudo locale-gen

jobs:
  preflight:
    executor: arlo
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - python/install-packages:
          pkg-manager: poetry
      - create-data-model

      - run:
          name: typecheck server
          command: |
            make typecheck-server

      - run:
          name: format server
          command: |
            make format-server
            git diff-index --quiet HEAD -- || (echo "Found unexpected changes!" && git diff && exit 1)
      - run:
          name: lint server
          command: |
            make lint-server

  build-and-test-server:
    executor: arlo
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - python/install-packages:
          pkg-manager: poetry
      - create-data-model
      - run:
          name: test server
          command: |
            poetry run pytest -n 8 --cov=.

  build-and-test-client:
    executor: arlo
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - node/install-packages:
          pkg-manager: yarn
          app-dir: client
      - run:
          name: install-graphicsmagick
          command: |
            sudo apt-get update
            sudo apt-get install graphicsmagick

      - run:
          name: test client
          command: |
            make test-client

  cypress:
    executor: arlo
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - python/install-packages:
          pkg-manager: poetry
      - node/install-packages:
          pkg-manager: yarn
          app-dir: client
          cache-version: v2
          # In order to cache the Cypress binary, we have to cache
          # ~/.cache/Cypress (alongside the default caching of ~/.cache/yarn).
          # So we just cache all of ~/.cache.
          cache-path: ~/.cache
      - browser-tools/install-chrome
      - create-data-model
      - run:
          name: cypress
          command: |
            ./client/run-cypress-tests.sh
      - store_artifacts:
          path: client/cypress/screenshots
      - store_artifacts:
          path: client/cypress/videos
workflows:
  version: 2
  build-and-test:
    jobs:
      - preflight
      - build-and-test-server
      - build-and-test-client
      - cypress
