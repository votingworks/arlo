version: 2.1
orbs:
  cypress: cypress-io/cypress@1
jobs:
  preflight:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 5
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          name: Restore Pip Cache
          keys:
            - pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v5-{{ .Branch }}-
            - pip-packages-v5-
      - run:
          name: install
          command: |
            pipenv install --dev

      - save_cache:
          name: Save Pip Cache
          key: pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache
      - run:
          name: create data model
          command: |
            make resetdb

      - run:
          name: typecheck server
          command: |
            make typecheck-server

      - run:
          name: format server
          command: |
            make format-server
            git diff-index --quiet HEAD -- || (echo "Found unexpected changes!" && git diff && exit 1)
      - run:
          name: lint server
          command: |
            make lint-server

  build-and-test-server:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 5
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          name: Restore Pip Cache
          keys:
            - pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v5-{{ .Branch }}-
            - pip-packages-v5-
      - run:
          name: install
          command: |
            pipenv install --dev

      - save_cache:
          name: Save Pip Cache
          key: pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache
      - run:
          name: create data model
          command: |
            make resetdb
      - run:
          name: test-server # server tests
          command: |
            pipenv run pytest --cov=.

  build-and-test-client:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 5
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore Node Cache
          keys:
            - npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install
          command: |
            yarn install
            yarn --cwd client install
            yarn --cwd client build

      - save_cache:
          name: Save Yarn Cache
          key: yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          name: Save Node Cache
          key: npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - client/node_modules

      - run:
          name: Install Chrome
          command: |
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
            # - run:
            #     name: create data model
            #     command: |
            #       make resetdb

      - run:
          name: test-client
          command: |
            #  if [[ $CIRCLE_NODE_INDEX = 2 ]]; then
              make test-client
              #fi

  wdio:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 5
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore Node Cache
          keys:
            - npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - restore_cache:
          name: Restore Pip Cache
          keys:
            - pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v5-{{ .Branch }}-
            - pip-packages-v5-
      - run:
          name: install
          command: |
            make install install-development

      - run:
          name: Install Chrome
          command: |
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
      - run:
          name: create data model
          command: |
            make resetdb

      - run:
          name: wdio
          command: |
            yarn --cwd client test:wdio

  cypress:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 5
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore Node Cache
          keys:
            - npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - restore_cache:
          name: Restore Pip Cache
          keys:
            - pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v5-{{ .Branch }}-
            - pip-packages-v5-
      - run:
          name: install
          command: |
            make install install-development

      - run:
          name: Install Chrome
          command: |
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
      - run:
          name: create data model
          command: |
            make resetdb
      - run:
          name: cypress
          command: |
            ./client/run-cypress-tests.sh
workflows:
  version: 2
  build-and-test:
    jobs:
      - preflight
      - build-and-test-server
      - build-and-test-client
      - wdio
      - cypress
