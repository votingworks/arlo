version: 2.1
orbs:
  cypress: cypress-io/cypress@1
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.7.3-node-browsers
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/arlo-test
          FLASK_ENV: test
      - image: circleci/postgres:9.6.3-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: arlo-test
    parallelism: 1
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
            - pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v5-{{ .Branch }}-
            - pip-packages-v5-
      - restore_cache:
          keys:
            - npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install
          command: |
            make install install-development

      - save_cache:
          key: yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: pip-packages-v5-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache
      - save_cache:
          key: npm-packages-v8-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - client/node_modules

      - run:
          name: Install Chrome
          command: |
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
      - run:
          name: create data model
          command: |
            make resetdb

      - run:
          name: preflight-checks
          background: true
          command: |
            make typecheck-server
            make lint-server
            make format-server
            git diff-index --quiet HEAD -- || (echo "Found unexpected changes!" && git diff && exit 1)
      - run:
          name: test-server # server tests
          background: true
          command: |
            pipenv run pytest --cov=.
      - run:
          name: test-client
          background: true
          command: |
            make test-client
      - run:
          name: wdio
          background: true
          command: |
            yarn --cwd client test:wdio
      - run:
          name: cypress
          background: true
          command: |
            ./client/run-cypress-tests.sh

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test
